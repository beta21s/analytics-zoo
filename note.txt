java -cp scala-xml_2.11-1.3.0.jar:analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.10.0-SNAPSHOT-serving.jar  \
com.intel.analytics.zoo.models.image.objectdetection.common.dataset.RoiImageSeqGenerator  -i train \
-f /home/at/Desktop/dogs -o /home/at/Desktop/dogs/seq/train -p 1

java -cp scala-xml_2.11-1.3.0.jar:analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.10.0-SNAPSHOT-serving.jar  \
com.intel.analytics.zoo.models.image.objectdetection.common.dataset.RoiImageSeqGenerator  -i test \
-f /home/at/Desktop/dogs -o /home/at/Desktop/dogs/seq/test -p 1


spark-submit \
    --master local[4] \
    --driver-memory 40g \
    --executor-memory 40g \
    --conf "spark.serializer=org.apache.spark.serializer.JavaSerializer" \
    --class com.intel.analytics.zoo.examples.objectdetection.finetune.ssd.Train \
    analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.10.0-SNAPSHOT-jar-with-dependencies.jar \
    --resolution 300 \
    --model analytics-zoo_ssd-vgg16-300x300_PASCAL_0.1.0.model \
    --class /home/at/Desktop/dogs/classname.txt \
    -f /home/at/Desktop/dogs/seq/train \
    -v /home/at/Desktop/dogs/seq/test \
    -e 50 -b 4 \
    --modelDir /home/at/Desktop/dogs/model \
    -l 0.0001 --learningRateDecay 0.0005


export ZOO_JAR_SPARK_PATH=/home/at/Desktop/analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.9.0-serving.jar
export ZOO_JAR_PATH=/home/at/Desktop/analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.9.0-jar-with-dependencies.jar



java -cp scala-xml_2.11-1.3.0.jar:analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.9.0-serving.jar  \
com.intel.analytics.zoo.models.image.objectdetection.common.dataset.RoiImageSeqGenerator  -i train \
-f /home/at/Desktop/xe -o /home/at/Desktop/xe/seq/train -p 0


spark-submit \
    --master local[4] \
    --driver-memory 20g \
    --executor-memory 20g \
    --conf "spark.serializer=org.apache.spark.serializer.JavaSerializer" \
    --class com.intel.analytics.zoo.examples.objectdetection.finetune.ssd.Train \
    analytics-zoo-bigdl_0.12.1-spark_2.4.3-0.9.0-jar-with-dependencies.jar \
    --resolution 300 \
    --model analytics-zoo_ssd-vgg16-300x300_COCO_0.1.0.model \
    --class /home/at/Desktop/xe/classname.txt \
    -f /home/at/Desktop/xe/seq/train \
    -v /home/at/Desktop/xe/seq/test \
    -e 1 -b 50 \
    --modelDir /home/at/Desktop/xe/model \
    -l 0.0001 --learningRateDecay 0.0005




${ANALYTICS_ZOO_HOME}/bin/pyspark-shell-with-zoo.sh \
--verbose \
--master local[4] \
--driver-memory 10g \
--executor-memory 10g \
--class  \
--image /home/at/Desktop/img-3.png --output /home/at/Desktop/ --modelPath /home/at/Desktop/final.model  --partition 4


export SPARK_DRIVER_MEMORY=10g
python predict.py model_path=/home/at/Desktop/final.model img_path=/home/at/Desktop/img-3.png output_path=/home/at/Desktop/


sudo docker run -it --rm --net=host -v /home/at/Desktop/docker:/opt/work/data  -e NotebookPort=12345 -e NotebookToken="fit2020" intelanalytics/analytics-zoo:latest bash





import os,json, cv2
os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"
os.environ["SPARK_DRIVER_MEMORY"] = "8g"

from zoo.common.nncontext import *
from zoo.models.image.objectdetection import *

from zoo.models.image.common.image_config import ImageConfigure
from zoo.feature.image.imagePreprocessing import ImageResize
from zoo.feature.common import ChainedPreprocessing


sc = init_nncontext()
model = ObjectDetector.load_model("/home/at/Desktop/xe_final.model")

print('done')

preprocess = ChainedPreprocessing([ImageResize(300, 300), ImageChannelNormalize(123.0, 117.0, 104.0), ImageMatToTensor(), ImageSetToSample()])
postprocess = ScaleDetection()

label_map = {0: '__background__', 1: 'African_hunting_dog'}
config = ImageConfigure(preprocess, postprocess, 2, label_map)

image_set = ImageSet.read('/home/at/Desktop/img-3.png', sc)
output = model.predict_image_set(image_set, config)

visualizer = Visualizer(config.label_map(), encoding="png")
visualized = visualizer(output).get_image(to_chw=False).collect()

for img_id in range(len(visualized)):
    cv2.imwrite('zzzz.png', visualized[img_id])
